CaseSplit 23 ASM Split 2 3 64 0 1 15 Lambda %i Word 32 Op Plus Word 32 2 Var r1 Word 32 Op Times Word 32 2 Op Minus Word 32 2 Num 0 Word 32 Var %i Word 32 Op Plus Word 32 2 Num 4 Word 32 Num 4 Word 32 Lambda %i Word 32 Var ret Word 32 Lambda %i Word 32 Op Plus Word 32 2 Var r0 Word 32 Op Times Word 32 2 Op Minus Word 32 2 Num 0 Word 32 Var %i Word 32 Op Plus Word 32 2 Num 8 Word 32 Num 8 Word 32 Lambda %i Word 32 Var r9 Word 32 Lambda %i Word 32 Var r8 Word 32 Lambda %i Word 32 Var r5 Word 32 Lambda %i Word 32 Var r11 Word 32 Lambda %i Word 32 Op ROData Bool 1 Var mem Mem Lambda %i Word 32 Op Plus Word 32 2 Var r3 Word 32 Op Times Word 32 2 Op Minus Word 32 2 Num 0 Word 32 Var %i Word 32 Op Plus Word 32 2 Num 1 Word 32 Num 1 Word 32 Lambda %i Word 32 Var r14 Word 32 Lambda %i Word 32 Var r7 Word 32 Lambda %i Word 32 Var r6 Word 32 Lambda %i Word 32 Var r10 Word 32 Lambda %i Word 32 Var r13 Word 32 Lambda %i Word 32 Op StackWrapper RelWrapper 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Var stack Mem 10 1 2 3 Lambda %i Word 32 Var p#v Word 32 Lambda %i Word 32 Op Plus Word 32 2 Var loop#2#count Word 32 Op Times Word 32 2 Op Times Word 32 2 Var %i Word 32 Num -2 Word 32 Num 1 Word 32 Lambda %i Word 32 Op Plus Word 32 2 Var i#v Word 32 Op Times Word 32 2 Op Times Word 32 2 Var %i Word 32 Num -2 Word 32 Num 1 Word 32 1 Lambda %i Word 32 Var mem Mem Lambda %i Word 32 Var Mem Mem Restr 64 ASM Number 0 3 Restr 10 C Number 0 6 Leaf Restr 64 ASM Offset 0 3 Restr 10 C Offset 0 5 Leaf Split 2 3 64 0 1 15 Lambda %i Word 32 Op Plus Word 32 2 Var r1 Word 32 Op Times Word 32 2 Op Minus Word 32 2 Num 0 Word 32 Var %i Word 32 Op Plus Word 32 2 Num 4 Word 32 Num 4 Word 32 Lambda %i Word 32 Var ret Word 32 Lambda %i Word 32 Op Plus Word 32 2 Var r0 Word 32 Op Times Word 32 2 Op Minus Word 32 2 Num 0 Word 32 Var %i Word 32 Op Plus Word 32 2 Num 8 Word 32 Num 8 Word 32 Lambda %i Word 32 Var r9 Word 32 Lambda %i Word 32 Var r8 Word 32 Lambda %i Word 32 Var r5 Word 32 Lambda %i Word 32 Var r11 Word 32 Lambda %i Word 32 Op ROData Bool 1 Var mem Mem Lambda %i Word 32 Op Plus Word 32 2 Var r3 Word 32 Op Times Word 32 2 Op Minus Word 32 2 Num 0 Word 32 Var %i Word 32 Op Plus Word 32 2 Num 1 Word 32 Num 1 Word 32 Lambda %i Word 32 Var r14 Word 32 Lambda %i Word 32 Var r7 Word 32 Lambda %i Word 32 Var r6 Word 32 Lambda %i Word 32 Var r10 Word 32 Lambda %i Word 32 Var r13 Word 32 Lambda %i Word 32 Op StackWrapper RelWrapper 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Var stack Mem 73 2 2 3 Lambda %i Word 32 Var p#v Word 32 Lambda %i Word 32 Op Plus Word 32 2 Var loop#2#count Word 32 Op Times Word 32 2 Op Times Word 32 2 Var %i Word 32 Num -2 Word 32 Num 1 Word 32 Lambda %i Word 32 Op Plus Word 32 2 Var i#v Word 32 Op Times Word 32 2 Op Times Word 32 2 Var %i Word 32 Num -2 Word 32 Num 1 Word 32 1 Lambda %i Word 32 Var mem Mem Lambda %i Word 32 Var Mem.1 Mem Restr 64 ASM Number 0 3 Restr 73 C Number 0 7 Leaf Restr 64 ASM Offset 0 3 Restr 73 C Offset 0 5 Leaf


